#!/usr/bin/env node

'use strict';

var fs            = require('fs'),
    path          = require('path'),
    colors        = require('cli-color'),
    program       = require('commander'),
    generateCssData = require('../lib/generateCssData'),
    generateCustomSpecificityFiles = require('../lib/cli');

program
  .option('-o, --output', 'Output destination')
  .parse(process.argv);

var input = program.args[0] ? path.resolve(program.args[0]) : null;
var output = program.output ? path.resolve(program.output) : './specificity-graph';

function error(e) {
  console.log(colors.bold(colors.red('Specificity encounters an error')));
  console.log();
  console.log(e)
  e.stack && console.log(e.stack);
  process.exit(2);
}

if (input && !fs.existsSync(input)) {
  console.error(colors.red('Unable to read file'), input);
  process.exit(1);
}

if(input) {
  try {
    var css = fs.readFileSync(input);
    var specificity = generateCssData(css.toString());

    generateCustomSpecificityFiles(output, specificity, function (dest){
      console.log(colors.blue('[specificity-graph]') + ' Write specificity in ' + dest);
    });

  }catch(e) {
    error(e);
  }
}


if(!input) {
  process.stdin.resume();
  process.stdin.setEncoding('utf8');

  var buffer = '';
  process.stdin.on('data', function(data) {
      buffer += data;
  });

  process.stdin.on('end', function() {
    try {
      var specificity = generateCssData(buffer);
      console.log(JSON.stringify(specificity,null, 2));

    }catch(e) {
      error(e);
    }
  });
}
